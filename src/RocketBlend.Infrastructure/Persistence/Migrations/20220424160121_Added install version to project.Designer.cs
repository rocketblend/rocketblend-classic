// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyAbout.Services.Resource.Infrastructure.Persistence;

#nullable disable

namespace RocketBlend.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220424160121_Added install version to project")]
    partial class Addedinstallversiontoproject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("RocketBlend.Domain.Entities.Build", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Filesize")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Build", (string)null);
                });

            modelBuilder.Entity("RocketBlend.Domain.Entities.Install", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BuildId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileLocation")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LaunchArgs")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuildId");

                    b.ToTable("Install", (string)null);
                });

            modelBuilder.Entity("RocketBlend.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InstallId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstallId");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("RocketBlend.Domain.Entities.Install", b =>
                {
                    b.HasOne("RocketBlend.Domain.Entities.Build", "Build")
                        .WithMany("Installs")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Build");
                });

            modelBuilder.Entity("RocketBlend.Domain.Entities.Project", b =>
                {
                    b.HasOne("RocketBlend.Domain.Entities.Install", "Install")
                        .WithMany("Projects")
                        .HasForeignKey("InstallId");

                    b.Navigation("Install");
                });

            modelBuilder.Entity("RocketBlend.Domain.Entities.Build", b =>
                {
                    b.Navigation("Installs");
                });

            modelBuilder.Entity("RocketBlend.Domain.Entities.Install", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
